@using E_CommerceAR.Extensions;
@using E_CommerceAR.Domain.ModalsBase;
@using E_CommerceAR.Domain.ModalsViews;

@model Products;
@{
    bool Edit = ViewBag.Edit;
    string DocumentId = ViewBag.DocumentId;
    List<Colorslist> colorsList = ViewBag.ColorsList;
    List<SizeList> SizeList = ViewBag.SizeList;
}

<style>
    input {
        border: 1px solid !important
    }




    .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

</style>
<div class="row">
    <div class="col-12">
        <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 p-1">
                    <div class="col-md-12 d-flex">
                        <div class="col-md-10">
                            <h6 class="text-white text-capitalize ps-3">@Html.Translate("قائمة المنتجات","List Products")</h6>
                        </div>
                        <div class="col-md-2" style="text-align: end !important;">
                            <button class="btn bg-gradient-info mb-0" onclick="ListProducts()">
                                @Html.Translate(" عودة الى القائمة","Back to list")
                            </button>
                        </div>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="text-start">
                    <div class="row">
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">@Html.Translate("اسم المنتج","Name Products")</label>
                            <input type="text" class="form-control" name="Name" value="@Model.Name" @(Edit == true ? "" : "readonly")>

                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">@Html.Translate("اسم الصنف","Name Category")</label>
                            <input type="text" class="form-control" name="Category" value="@Model.Category" @(Edit == true ? "" : "readonly")>
                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">@Html.Translate("وصف المنتج","Desc Products")</label>
                            <input type="text" class="form-control" name="Description" value="@Model.Description" @(Edit == true ? "" : "readonly")>
                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">@Html.Translate("السعر","Price")</label>
                            <input type="number" class="form-control" name="Price" value="@Model.Price.ToString().Replace('٫','.')" @(Edit == true ? "" : "readonly")>
                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">@Html.Translate("الخصم &","Offer %")</label>
                            <input type="number" class="form-control" name="OfferPercentage" value="@Model.OfferPercentage.ToString().Replace('٫','.')" @(Edit == true ? "" : "readonly")>
                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">

                            <label class="form-label">@Html.Translate("الالوان ","Colores")</label>
                            <select class="form-select " id="ColoresSelect" multiple="multiple">
                                <option disabled>@Html.Translate("--يرجى الاختيار--","Plases Select")</option>
                                @foreach (var item in colorsList)
                                {
                                    @*   if (Model.ColorValues.Contains(item.hex))
                                {
                                <option selected value="@item.hex">@item.name</option>
                                }
                                else *@
                                    @* { *@
                                    <option value="@item.hex">@item.name</option>
                                    @* } *@
                                }
                            </select>
                        </div>
                        <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                            <label class="form-label">
                                @Html.Translate("الحجم المنتج :","Products Sizes : ")
                            </label>
                            <select class="form-select " id="SizeListSelect" multiple="multiple">
                                <option disabled>@Html.Translate("--يرجى الاختيار--","Plases Select")</option>
                                @foreach (var item in SizeList)
                                {
                                    if (Model.sizes.Contains(item.Key))
                                    {
                                        <option selected value="@item.Key">@item.name</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Key">@item.name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <br />
                <div class="col-md-6" style="text-align: @Html.Translate("right","left");">
                    <label class="form-label">@Html.Translate("مرفقات المنتج :","Products Attachments : ")</label>
                </div>
                <div class="col-md-12" style="text-align: @Html.Translate("right","left");">
                    <div>
                        <div class="card mt-4">
                            <div class="card-header pb-0 p-3">
                                <div class="row">
                                    <div class="col-10 d-flex align-items-center">
                                        @Html.Translate("صور المنتج","Products Photos")
                                    </div>
                                    <div class="col-2  " style="text-align: end;">
                                        <a class="btn bg-gradient-dark mb-0" onclick="eAddPhotos()"><i class="material-icons text-sm">add</i>@Html.Translate("اضافة صور ","Add Photos")</a>
                                    </div>

                                </div>
                            </div>
                            <div class="card-body p-3">
                                <div class="col-md-auto mb-3">
                                    <label class="form-label">@Html.Translate("صورة المنتج بامتداد .glb","Product Image Extension.glb")</label>
                                    <input type="file" id="fileInput" name="Attachments" value="@Model.Model" accept=".glb" class="form-control">


                                </div>
                                <form id="uploader" style="display:none">
                                    <input type="file" accept="*" multiple style="display:none" name="eUploadFileProduct" id="eUploadFileProduct" onchange="eUploadProduct(this)" />
                                </form>
                                <div class="col-md-12" style="height:300px; overflow-y:auto">
                                    <article>
                                        <div class="content container-fluid">
                                            <div class="form-group">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <section class="content-max-width">
                                                            <section id="info-box">
                                                                <div class="row" id="eAllFiles">
                                                                </div>
                                                            </section>
                                                        </section>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </article>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <br />
                <br />
                <div class="col-md-12">
                    <button type="submit" style="float:@Html.Translate("left","right") !important;" onclick="eSaveProducts()" class="btn bg-gradient-success  mb-0"> @Html.Translate("حفظ","Save")</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('#ColoresSelect').select2();
    $('#SizeListSelect').select2();
    var edit = '@Edit';
    var documentId = '@DocumentId'

    $(document).ready(function () {
        debugger
        var url = '/DealerAreas/Products/eShowFileProduct?DocumentId=' + documentId + '&Edit=' + edit;


 
        $('#eAllFiles').html("");
        $('#eAllFiles').load(url);

    })
    $(document).ready(function () {
        $('.form-control').focus(function () {
            $(this).addClass('focused');
        });

        $('.form-control').blur(function () {
            if (!$(this).val()) {
                $(this).removeClass('focused');
            }
        });
    });
    function ListProducts() {
        debugger
        $('#allProdictsDiv').html('');
       
        var url = '@Url.Action("Index", "Products", new { area = "DealerAreas" })';
        $('#allProdictsDiv').load(url);
    }
    function eAddPhotos() {
        $("#eUploadFileProduct").wrap('<form>').closest('form').get(0).reset();
        $("#eUploadFileProduct").click();
    }
    function eUploadProduct(Elem) {
        let id = '@Model.Id';
        var uploadDate = new Date();
        var day = ('0' + uploadDate.getDate()).slice(-2);
        var month = ('0' + (uploadDate.getMonth() + 1)).slice(-2);
        var year = uploadDate.getFullYear();

        var shortDate = day + '/' + month + '/' + year;

        var file_size = $(Elem)[0].files[0].size;
        var fileName = $("#eUploadFileProduct").val().replace(/C:\\fakepath\\/i, '');
        var filetype = fileName.split('.').pop();
        var InputID = $(Elem).attr("id");

        var $file = document.getElementById(InputID);
        var ContentType = $file.files[0].type;
        $formData = new FormData();
        if ($file.files.length > 0) {
            for (var i = 0; i < $file.files.length; i++) {
                $formData.append('file-' + i, $file.files[i]);
            }
        }
        $formData.append('ProductId', id);
        $.ajax({
            url: '@Url.Action("ArchiveFile", "Products", new { area = "DealerAreas" })',
            type: 'POST',
            data: $formData,
            contentType: false,
            processData: false,
            success: function (r) {
                eReloadImages();
            },
            error: function (error) {
            }
        });
    }
    function eReloadImages() {
        var url = '/DealerAreas/Products/eShowFileProduct?DocumentId=' + documentId + '&Edit=' + edit;

 
        $('#eAllFiles').load(url);
    }
    function OpenImageProducts(e) {
        var choicedPhoto = "eimage_" + e;
        var ContentType = "eContentType_" + e;
        ContentType = document.getElementById(ContentType).value;
        if (ContentType == "image/jpeg" || ContentType == "image/png" || ContentType == "image/jpg") {
            var data = document.getElementById(choicedPhoto).getAttribute("src");
            let Window = window.open("")
            Window.document.write("<body style='margin: 0px; height: 100%;zoom: 50%;'><img style='display: block;-webkit-user-select: none;zoom: 50%;' src='" + data + "'></body>")
        }
        else if (ContentType == "application/pdf") {
            var base64 = "ebase64_" + e;
            base64 = document.getElementById(base64).value;
            var FileName = "eFileName_" + e;
            FileName = document.getElementById(FileName).value;
            var binaryString = window.atob(base64);
            var binaryLen = binaryString.length;
            var bytes = new Uint8Array(binaryLen);
            for (var i = 0; i < binaryLen; i++) {
                var ascii = binaryString.charCodeAt(i);
                bytes[i] = ascii;
            }

            var blob = new Blob([bytes], { type: "application/pdf" });
            var link = window.URL.createObjectURL(blob);
            window.open(link, '', 'height=650,width=840');
        }
        else {
            var data = document.getElementById(choicedPhoto).getAttribute("src");
            let Window = window.open("")
            Window.document.write("<iframe width='100%' height='100% ' src='" + data + "'></iframe>")
        }
    }
    function eDownloadFileProducts(e) {

        var base64 = "ebase64_" + e;
        base64 = document.getElementById(base64).value;
        var FileName = "eFileName_" + e;
        FileName = document.getElementById(FileName).value;
        var binaryString = window.atob(base64);
        var binaryLen = binaryString.length;
        var bytes = new Uint8Array(binaryLen);
        for (var i = 0; i < binaryLen; i++) {
            var ascii = binaryString.charCodeAt(i);
            bytes[i] = ascii;
        }
        saveByteArray(FileName, bytes)
    }
    function eDeleteImageProducts(ids, ProductId) {


        $.ajax({
            url: '@Url.Action("DeleteFile", "Products", new { area = "DealerAreas" })',
            type: 'POST',
            data: {
                id: ids, ProductId: ProductId
            },
            success: function (r) {
                eReloadImages();
            },
            error: function (error) {
            }
        });
    }
    function saveByteArray(reportName, byte) {
        var blob = new Blob([byte], { type: "application/pdf" });
        var link = document.createElement('a');
        link.href = window.URL.createObjectURL(blob);
        var fileName = reportName;
        link.download = fileName;
        link.click();
    }
    $('#fileInput').on('change', function () {
        var fileInput = this;
        var fileError = $('#fileError');

        if (fileInput.files.length > 0) {
            var allowedExtensions = ['.glb'];
            var fileName = fileInput.files[0].name;
            var fileExtension = fileName.split('.').pop().toLowerCase();

            if (allowedExtensions.indexOf('.' + fileExtension) === -1) {
                fileInput.value = ''; // Clear the file input
                fileError.textContent = '@Html.Translate("تنسيق ملف غير صالح. يرجى تحميل ملف .glb.","Invalid file format. Please upload a .glb file.")';
            } else {
                fileError.text(''); // Clear any previous error message
            }
        }
    });
    function eSaveProducts() {
        debugger

        var name = $("input[name='Name']").val();
        var category = $("input[name='Category']").val();
        var price = $("input[name='Price']").val();
        var offerPercentage = $("input[name='OfferPercentage']").val();
        var coloresSelect = $("#ColoresSelect").val();
        var attachments = $("input[name='Attachments']").val();
        var SizeListSelect = $("#SizeListSelect").val();

        var Products = [];

        // Perform validation
        if (name === '') {
            alert('Please enter a valid Name.');
            return;
        }

        if (category === '') {
            alert('Please enter a valid Category.');
            return;
        }

        if (price === '' || isNaN(price)) {
            alert('Please enter a valid Price.');
            return;
        }

        if (offerPercentage.trim() === '' || isNaN(offerPercentage)) {
            offerPercentage = 0;
        }

        if (!coloresSelect) {
            coloresSelect = [];
        }

        if (!attachments) {
            attachments = null;
        }
        var formData = new FormData();
        formData.append("id", '@Model.Id');
        formData.append("DocumentId", '@DocumentId');
        formData.append("Name", $("input[name='Name']").val());
        formData.append("Category", $("input[name='Category']").val());
        formData.append("Description", $("input[name='Description']").val());
        formData.append("Price", $("input[name='Price']").val());
        formData.append("OfferPercentage", $("input[name='OfferPercentage']").val());
        formData.append("ColorValues", $("#ColoresSelect").val());

        formData.append("Model", $("input[name='Attachments']")[0].files[0]);
        $('.row.g-3 .info-box').each(function () {
            debugger
            var id = $(this).find('input[id^="eId_"]').val();

            var base64 = $('#ebase64_' + id).val();
            var contentType = $('#eContentType_' + id).val();
            var fileName = $('#eFileName_' + id).val();

            var byteCharacters = atob(base64);
            var byteArrays = [];

            for (var offset = 0; offset < byteCharacters.length; offset += 512) {
                var slice = byteCharacters.slice(offset, offset + 512);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);
                byteArrays.push(byteArray);
            }

            var blob = new Blob(byteArrays, { type: contentType });

            formData.append('images', blob, fileName);
        });
   
        $.each(SizeListSelect, function (index, size) {
            formData.append("sizes[" + index + "]", size);
        });
        $.ajax({
           

            url: '@Url.Action("SaveEditProducts", "Products", new { area = "DealerAreas" })',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                $('#allProdictsDiv').html('');
                var url = '@Url.Action("Index", "Products", new { area = "DealerAreas" })';
                $('#allProdictsDiv').load(url);
            },
            error: function (error) {
                console.error("Error saving data: ", error);
            }
        });
    }

</script>